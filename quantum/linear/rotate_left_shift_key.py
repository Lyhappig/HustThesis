def circ_ls(num, shift, bit_size):
    shift = shift % bit_size
    left_part = (num << shift) & ((1 << bit_size) - 1)
    right_part = num >> (bit_size - shift)
    result = left_part | right_part
    return result


x = [0] * 32
pos = [0, 1, 28, 16, 4, 5, 6, 7, 8, 9, 11, 2, 3, 13, 14, 15, 25, 17, 18, 10, 20, 21, 19, 23, 24, 12, 26, 27, 31, 29, 30, 22]


def get_L(number: int):
    global x
    for i in range(32):
        x[i] = (number >> (31 - i)) & 1

    x[9] = x[9] ^ x[31]
    x[28] = x[28] ^ x[9]
    x[16] = x[16] ^ x[3]
    x[15] = x[15] ^ x[28]
    x[3] = x[3] ^ x[25]
    x[25] = x[25] ^ x[19]
    x[22] = x[22] ^ x[31]
    x[31] = x[31] ^ x[21]
    x[2] = x[2] ^ x[11]
    x[3] = x[3] ^ x[12]
    x[2] = x[2] ^ x[12]
    x[29] = x[29] ^ x[10]
    x[22] = x[22] ^ x[12]
    x[21] = x[21] ^ x[11]
    x[10] = x[10] ^ x[0]
    x[10] = x[10] ^ x[19]
    x[19] = x[19] ^ x[11]
    x[11] = x[11] ^ x[1]
    x[1] = x[1] ^ x[14]
    x[1] = x[1] ^ x[24]
    x[24] = x[24] ^ x[15]
    x[15] = x[15] ^ x[12]
    x[12] = x[12] ^ x[6]
    x[6] = x[6] ^ x[0]
    x[0] = x[0] ^ x[13]
    x[0] = x[0] ^ x[23]
    x[23] = x[23] ^ x[14]
    x[14] = x[14] ^ x[5]
    x[5] = x[5] ^ x[28]
    x[14] = x[14] ^ x[27]
    x[28] = x[28] ^ x[19]
    x[23] = x[23] ^ x[4]
    x[19] = x[19] ^ x[13]
    x[13] = x[13] ^ x[4]
    x[4] = x[4] ^ x[17]
    x[28] = x[28] ^ x[25]
    x[4] = x[4] ^ x[27]
    x[27] = x[27] ^ x[8]
    x[27] = x[27] ^ x[18]
    x[13] = x[13] ^ x[26]
    x[18] = x[18] ^ x[9]
    x[9] = x[9] ^ x[12]
    x[12] = x[12] ^ x[16]
    x[16] = x[16] ^ x[26]
    x[26] = x[26] ^ x[17]
    x[17] = x[17] ^ x[8]
    x[17] = x[17] ^ x[30]
    x[8] = x[8] ^ x[31]
    x[31] = x[31] ^ x[25]
    x[26] = x[26] ^ x[7]
    x[25] = x[25] ^ x[7]
    x[7] = x[7] ^ x[30]
    x[30] = x[30] ^ x[21]
    x[31] = x[31] ^ x[21]
    x[21] = x[21] ^ x[2]
    x[2] = x[2] ^ x[15]
    x[7] = x[7] ^ x[20]
    x[15] = x[15] ^ x[9]
    x[9] = x[9] ^ x[6]
    x[6] = x[6] ^ x[29]
    x[29] = x[29] ^ x[20]
    x[20] = x[20] ^ x[11]
    x[11] = x[11] ^ x[10]
    x[11] = x[11] ^ x[19]
    x[19] = x[19] ^ x[22]
    x[19] = x[19] ^ x[3]
    x[6] = x[6] ^ x[10]
    x[19] = x[19] ^ x[31]
    x[31] = x[31] ^ x[28]
    x[28] = x[28] ^ x[2]
    x[2] = x[2] ^ x[24]
    x[9] = x[9] ^ x[22]
    x[24] = x[24] ^ x[5]
    x[12] = x[12] ^ x[3]
    x[5] = x[5] ^ x[18]
    x[25] = x[25] ^ x[12]
    x[25] = x[25] ^ x[6]
    x[11] = x[11] ^ x[0]

    ans = 0
    for i in range(32):
        ans = (ans << 1) | x[pos[i]]
    return ans


def get_L_reverse():
    global x

    x[11] = x[11] ^ x[0]
    x[25] = x[25] ^ x[6]
    x[25] = x[25] ^ x[12]
    x[5] = x[5] ^ x[18]
    x[12] = x[12] ^ x[3]
    x[24] = x[24] ^ x[5]
    x[9] = x[9] ^ x[22]
    x[2] = x[2] ^ x[24]
    x[28] = x[28] ^ x[2]
    x[31] = x[31] ^ x[28]
    x[19] = x[19] ^ x[31]
    x[6] = x[6] ^ x[10]
    x[19] = x[19] ^ x[3]
    x[19] = x[19] ^ x[22]
    x[11] = x[11] ^ x[19]
    x[11] = x[11] ^ x[10]
    x[20] = x[20] ^ x[11]
    x[29] = x[29] ^ x[20]
    x[6] = x[6] ^ x[29]
    x[9] = x[9] ^ x[6]
    x[15] = x[15] ^ x[9]
    x[7] = x[7] ^ x[20]
    x[2] = x[2] ^ x[15]
    x[21] = x[21] ^ x[2]
    x[31] = x[31] ^ x[21]
    x[30] = x[30] ^ x[21]
    x[7] = x[7] ^ x[30]
    x[25] = x[25] ^ x[7]
    x[26] = x[26] ^ x[7]
    x[31] = x[31] ^ x[25]
    x[8] = x[8] ^ x[31]
    x[17] = x[17] ^ x[30]
    x[17] = x[17] ^ x[8]
    x[26] = x[26] ^ x[17]
    x[16] = x[16] ^ x[26]
    x[12] = x[12] ^ x[16]
    x[9] = x[9] ^ x[12]
    x[18] = x[18] ^ x[9]
    x[13] = x[13] ^ x[26]
    x[27] = x[27] ^ x[18]
    x[27] = x[27] ^ x[8]
    x[4] = x[4] ^ x[27]
    x[28] = x[28] ^ x[25]
    x[4] = x[4] ^ x[17]
    x[13] = x[13] ^ x[4]
    x[19] = x[19] ^ x[13]
    x[23] = x[23] ^ x[4]
    x[28] = x[28] ^ x[19]
    x[14] = x[14] ^ x[27]
    x[5] = x[5] ^ x[28]
    x[14] = x[14] ^ x[5]
    x[23] = x[23] ^ x[14]
    x[0] = x[0] ^ x[23]
    x[0] = x[0] ^ x[13]
    x[6] = x[6] ^ x[0]
    x[12] = x[12] ^ x[6]
    x[15] = x[15] ^ x[12]
    x[24] = x[24] ^ x[15]
    x[1] = x[1] ^ x[24]
    x[1] = x[1] ^ x[14]
    x[11] = x[11] ^ x[1]
    x[19] = x[19] ^ x[11]
    x[10] = x[10] ^ x[19]
    x[10] = x[10] ^ x[0]
    x[21] = x[21] ^ x[11]
    x[22] = x[22] ^ x[12]
    x[29] = x[29] ^ x[10]
    x[2] = x[2] ^ x[12]
    x[3] = x[3] ^ x[12]
    x[2] = x[2] ^ x[11]
    x[31] = x[31] ^ x[21]
    x[22] = x[22] ^ x[31]
    x[25] = x[25] ^ x[19]
    x[3] = x[3] ^ x[25]
    x[15] = x[15] ^ x[28]
    x[16] = x[16] ^ x[3]
    x[28] = x[28] ^ x[9]
    x[9] = x[9] ^ x[31]

    ans = 0
    for i in range(32):
        ans = (ans << 1) | x[i]
    return ans


if __name__ == '__main__':
    maxn = 100000
    flag = True
    for i in range(1, maxn):
        t = i ^ circ_ls(i, 13, 32) ^ circ_ls(i, 23, 32)
        k = get_L(i)
        j = get_L_reverse()
        if t != k or i != j:
            print(i, t, k, j)
            exit(0)
    print("OK")
