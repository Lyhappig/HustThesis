import os
import sys
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))
from utils.matrix import GF2Matrix
from utils.util import *

def test1(x: int) -> bool:
    M1 = [0b11100101,
          0b11110010,
          0b01111001,
          0b10111100,
          0b01011110,
          0b00101111,
          0b10010111,
          0b11001011]

    y = 0
    for i in range(8):
        if x & (1 << (7 - i)):
            y ^= M1[i]
    z = get_bit_list(y)


    M2 = [
        [1, 1, 0, 1, 0, 0, 1, 1],
        [1, 1, 1, 0, 1, 0, 0, 1],
        [1, 1, 1, 1, 0, 1, 0, 0],
        [0, 1, 1, 1, 1, 0, 1, 0],
        [0, 0, 1, 1, 1, 1, 0, 1],
        [1, 0, 0, 1, 1, 1, 1, 0],
        [0, 1, 0, 0, 1, 1, 1, 1],
        [1, 0, 1, 0, 0, 1, 1, 1]
    ]

    X = GF2Matrix(get_bit_list(x))
    X.T()
    MT = GF2Matrix(M2)
    Y = MT * X
    Y.T()

    v1 = get_num(z[0], 1)
    v2 = get_num(Y.matrix[0], 1)
    return v1 == v2


def test2():
    p2t = [
        [0, 1, 0, 0, 0, 1, 1, 1],
        [1, 1, 0, 1, 1, 0, 1, 0],
        [0, 1, 1, 0, 1, 0, 1, 1],
        [1, 1, 0, 1, 1, 1, 0, 0],
        [1, 0, 0, 0, 1, 1, 1, 1],
        [1, 0, 0, 0, 1, 0, 1, 1],
        [1, 1, 1, 0, 1, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 0, 1]
    ]
    X = GF2Matrix(p2t)
    X.T()
    print(X)

    t2p = [
        [0, 0, 1, 0, 0, 0, 1, 1],
        [1, 1, 0, 1, 0, 0, 0, 1],
        [1, 1, 0, 1, 0, 1, 1, 0],
        [1, 0, 0, 1, 0, 1, 0, 0],
        [0, 1, 1, 1, 1, 0, 1, 0],
        [0, 0, 0, 0, 1, 1, 0, 0],
        [0, 1, 0, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 1]
    ]
    Y = GF2Matrix(t2p)
    Y.T()
    print(Y)

    c = [[1, 1, 0, 1, 0, 0, 1, 1]]
    C = GF2Matrix(c)
    C.T()
    print(C)


def test3():
    Affine2 = GF2Matrix([
        [1, 1, 1, 1, 1, 1, 1, 1],
        [0, 0, 0, 0, 1, 1, 1, 1],
        [1, 0, 1, 0, 1, 0, 1, 0],
        [0, 0, 0, 0, 1, 0, 1, 0],
        [0, 1, 0, 1, 0, 1, 0, 1],
        [0, 0, 0, 0, 0, 1, 0, 1],
        [1, 1, 0, 0, 1, 1, 0, 0],
        [0, 0, 0, 0, 1, 1, 0, 0],
        [1, 0, 0, 0, 1, 0, 0, 0],
        [0, 0, 0, 0, 1, 0, 0, 0],
        [0, 1, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0, 1, 0, 0],
        [0, 0, 1, 1, 0, 0, 1, 1],
        [0, 0, 0, 0, 0, 0, 1, 1],
        [0, 0, 1, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 1, 0],
        [0, 0, 0, 1, 0, 0, 0, 1],
        [0, 0, 0, 0, 0, 0, 0, 1],
        [0, 0, 0, 1, 0, 0, 0, 0],
        [0, 0, 1, 0, 0, 0, 0, 0],
        [1, 0, 1, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 0, 0, 0, 0]
    ])

    C = GF2Matrix([
        [1],
        [1],
        [0],
        [1],
        [0],
        [0],
        [1],
        [1]
    ])

    P2T = GF2Matrix([
        [0, 1, 0, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 0, 0, 1, 0],
        [0, 0, 1, 0, 0, 0, 1, 0],
        [0, 1, 0, 1, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0],
        [1, 0, 0, 1, 1, 0, 0, 0],
        [1, 1, 1, 0, 1, 1, 1, 0],
        [1, 0, 1, 0, 1, 1, 0, 1]
    ])

    ans = Affine2 * P2T * C
    ans.T()
    for i in range(len(ans.matrix[0])):
        if ans.matrix[0][i] != 0:
            print(i + 1)


if __name__ == '__main__':
    test3()